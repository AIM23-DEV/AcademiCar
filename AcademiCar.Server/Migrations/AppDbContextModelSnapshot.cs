// <auto-generated />
using AcademiCar.Server.DAL.UnitOfWork;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AcademiCar.Server.Migrations
{
    [DbContext(typeof(PostgresDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AcademiCar.Server.DAL.Entities.FavoriteUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("FavUserId")
                        .HasColumnType("integer");

                    b.Property<int>("UserID")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.HasIndex("UserId");

                    b.ToTable("FavoriteUser", "academicar");
                });

            modelBuilder.Entity("AcademiCar.Server.DAL.Entities.Preferences", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("FK_User")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("FK_User");

                    b.ToTable("Preferences", "academicar");
                });

            modelBuilder.Entity("AcademiCar.Server.DAL.Entities.Rating", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<int>("FK_User")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDriver")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPassenger")
                        .HasColumnType("boolean");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.HasIndex("FK_User");

                    b.ToTable("Rating", "academicar");
                });

            modelBuilder.Entity("AcademiCar.Server.DAL.Entities.Stats", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<float>("CO2Savings")
                        .HasColumnType("real");

                    b.Property<int>("DriverRating")
                        .HasColumnType("integer");

                    b.Property<int>("NrTrips")
                        .HasColumnType("integer");

                    b.Property<float>("PassengerRating")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("Stats", "academicar");
                });

            modelBuilder.Entity("AcademiCar.Server.DAL.Entities.TestTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Test_table", "test_schema");
                });

            modelBuilder.Entity("AcademiCar.Server.DAL.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FK_Stats")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("Picture")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.HasKey("ID");

                    b.HasIndex("FK_Stats");

                    b.ToTable("User", "academicar");
                });

            modelBuilder.Entity("AcademiCar.Server.DAL.Entities.Vehicle", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FK_User")
                        .HasColumnType("integer");

                    b.Property<string>("Features")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsElectric")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("Picture")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("Seats")
                        .HasColumnType("integer");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("FK_User");

                    b.ToTable("Vehicle", "academicar");
                });

            modelBuilder.Entity("AcademiCar.Server.DAL.Entities.FavoriteUser", b =>
                {
                    b.HasOne("AcademiCar.Server.DAL.Entities.User", "User")
                        .WithMany("Favorits")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AcademiCar.Server.DAL.Entities.User", "FavUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FavUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AcademiCar.Server.DAL.Entities.Preferences", b =>
                {
                    b.HasOne("AcademiCar.Server.DAL.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("FK_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AcademiCar.Server.DAL.Entities.Rating", b =>
                {
                    b.HasOne("AcademiCar.Server.DAL.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("FK_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AcademiCar.Server.DAL.Entities.User", b =>
                {
                    b.HasOne("AcademiCar.Server.DAL.Entities.Stats", "Stats")
                        .WithMany()
                        .HasForeignKey("FK_Stats")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stats");
                });

            modelBuilder.Entity("AcademiCar.Server.DAL.Entities.Vehicle", b =>
                {
                    b.HasOne("AcademiCar.Server.DAL.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("FK_User")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AcademiCar.Server.DAL.Entities.User", b =>
                {
                    b.Navigation("Favorits");
                });
#pragma warning restore 612, 618
        }
    }
}
